#!/bin/bash

# Supported packages
declare -A PKGLIST
PKGLIST=( 
    [chrome]=0
    [chromium-browser]=1
    [dbeaver]=2
    [discord]=3
    [dropbox]=4
    [earth]=5
    [gb-studio]=6
    [gitkraken]=7
    [handbrake-gtk]=8
    [minikube]=9
    [nextcloud-client]=10
    [notepadqq]=11
    [obs-studio]=12
    [rclone]=13
    [skype]=14
    [steam]=15
    [teams]=16
    [telegram]=17
    [unetbootin]=18
    [vscode]=19
)

# Corresponding URLs by index
declare -a PKGURL
PKGURL=( 
    "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    "ppa:saiarcot895/chromium-beta"
    "https://dbeaver.io/files/dbeaver-ce_latest_amd64.deb"
    "https://discordapp.com/api/download?platform=linux&format=deb"
    "https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2020.03.04_amd64.deb"
    "https://dl.google.com/dl/earth/client/current/google-earth-pro-stable_current_amd64.deb"
    "https://github.com/chrismaltby/gb-studio/releases/download/v1.1.0/gb-studio_1.1.0_amd64.deb"
    "https://release.axocdn.com/linux/gitkraken-amd64.deb"
    "ppa:stebbins/handbrake-releases"
    "https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb"
    "ppa:nextcloud-devs/client"
    "ppa:notepadqq-team/notepadqq"
    "ppa:obsproject/obs-studio"
    "https://downloads.rclone.org/rclone-current-linux-amd64.deb"
    "https://go.skype.com/skypeforlinux-64.deb"
    "https://steamcdn-a.akamaihd.net/client/installer/steam.deb"
    "https://teams.microsoft.com/downloads/desktopurl?env=production&plat=linux&arch=x64&download=true&linuxArchiveType=deb"
    "ppa:atareao/telegram"
    "ppa:gezakovacs/ppa"
    "https://go.microsoft.com/fwlink/?LinkID=760868"
)

PKGNAME=$1
PKGPATH="/tmp/${PKGNAME}.deb"
PKGNAMES=$(echo "${!PKGLIST[*]}" | tr " " "\n" | sort | tr "\n" " ")

# We need root privileges to install packages
if [[ $EUID -ne 0 ]]; then
    if [ "$(whereis sudo | cut -d: -f2- | xargs | wc -w)" == "0" ]; then
        # sudo binary not found, using su
        exec su - -c /bin/bash "$0" "$@"
    else
        # sudo binary found, rerun with sudo
        exec sudo /bin/bash "$0" "$@"
    fi
    exit 0
fi

URL=""
IFS=@
case "@${!PKGLIST[*]}@" in
  (*"@${PKGNAME}@"*)
    PKGINDEX=${PKGLIST[${PKGNAME}]}
    URL=${PKGURL[${PKGINDEX}]}
    echo "Requested ${PKGNAME} package."
    ;;
  *)
    unset IFS
    PKGHELP=${PKGNAMES// /$'\n\t'}
    echo -e "Unsupported package. Availiable packages:\n"
    echo -e "\t${PKGHELP}"
    exit 1
    ;;
esac

if [ "${URL}" != "" ]; then
    if [ -f "${PKGPATH}" ]; then
        rm -f "${PKGPATH}"
    fi
    # Support both PPA and direct .deb URLs
    if [[ "${URL}" == ppa:* ]]; then
        echo "Adding new PPA ${URL}"
        add-apt-repository -y ${URL}
        apt-get update
        echo "Installing ${PKGNAME}..."
        apt-get -y install ${PKGNAME}
        apt-get clean
    else
        echo "Downloading package from $URL"
        wget -O "${PKGPATH}" "${URL}" || exit 2
        echo "Installing ${PKGNAME}..."
        dpkg -i "${PKGPATH}" || ( apt-get -y -f install && dpkg -i "${PKGPATH}" )
    fi
    if [ -f "${PKGPATH}" ]; then
        rm -f "${PKGPATH}"
    fi
    echo "Done."
else
    echo "Unknown download url, installation aborted."
    exit 4
fi

exit 0

