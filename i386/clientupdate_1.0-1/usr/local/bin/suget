#!/bin/bash

# Supported packages
declare -A PKGLIST
PKGLIST=( 
    [chrome]=0
    [discord]=1
    [skype]=2
    [telegram]=3
    [vscode]=4
    [earth]=5
    [handbrake-gtk]=6
)

# Corresponding URLs by index
declare -a PKGURL
PKGURL=( 
    "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    "https://discordapp.com/api/download?platform=linux&format=deb"
    "https://go.skype.com/skypeforlinux-64.deb"
    "ppa:atareao/telegram"
    "https://go.microsoft.com/fwlink/?LinkID=760868"
    "https://dl.google.com/dl/earth/client/current/google-earth-pro-stable_current_amd64.deb"
    "ppa:stebbins/handbrake-releases"
)

PKGNAME=$1
PKGPATH="/tmp/${PKGNAME}.deb"
PKGNAMES=$(echo "${!PKGLIST[*]}" | tr " " "\n" | sort | tr "\n" " ")

# We need root privileges to install packages
if [[ $EUID -ne 0 ]]; then
    if [ "$(whereis sudo | cut -d: -f2- | xargs | wc -w)" == "0" ]; then
        # sudo binary not found, using su
        exec su - -c /bin/bash "$0" "$@"
    else
        # sudo binary found, rerun with sudo
        exec sudo /bin/bash "$0" "$@"
    fi
    exit 0
fi

URL=""
IFS=@
case "@${!PKGLIST[*]}@" in
  (*"@${PKGNAME}@"*)
    PKGINDEX=${PKGLIST[${PKGNAME}]}
    URL=${PKGURL[${PKGINDEX}]}
    echo "Requested ${PKGNAME} package."
    ;;
  *)
    unset IFS
    echo "Unsupported package. Availiable packages: ${PKGNAMES}"
    exit 1
    ;;
esac

if [ "${URL}" != "" ]; then
    if [ -f "${PKGPATH}" ]; then
        rm -f "${PKGPATH}"
    fi
    # Support both PPA and direct .deb URLs
    if [[ "${URL}" == ppa:* ]]; then
        echo "Adding new PPA ${URL}"
        add-apt-repository -y ${URL}
        apt-get update
        echo "Installing ${PKGNAME}..."
        apt-get -y install ${PKGNAME}
        apt-get clean
    else
        echo "Downloading package from $URL"
        wget -O "${PKGPATH}" "${URL}" || exit 2
        echo "Installing ${PKGNAME}..."
        dpkg -i "${PKGPATH}" || ( apt-get -y -f install && dpkg -i "${PKGPATH}" )
    fi
    if [ -f "${PKGPATH}" ]; then
        rm -f "${PKGPATH}"
    fi
    echo "Done."
else
    echo "Unknown download url, installation aborted."
    exit 4
fi

exit 0

